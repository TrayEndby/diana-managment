server {
	server_name www.kyros.ai;
	access_log  /var/log/nginx/https_access.log;
	error_log   /var/log/nginx/https_error.log info;

	root /var/www;

  location ^~ /api/ws {
    proxy_pass http://backend/ws;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "Upgrade";
    proxy_set_header Host $host;
  }

  location ^~ /api/ {
    proxy_pass http://backend/;
  }

	# Add index.php to the list if you are using PHP
	index index.html index.htm;

	location ~* \.(?:manifest|appcache|html?|xml|json)$ {
		expires -1;
	}

	location ~* \.(?:css|js)$ {
		try_files $uri =404;
		access_log off;
	}

	# Any route containing a file extension (e.g. /devicesfile.js)
	location ~ ^.+\..+$ {
		try_files $uri =404;
	}

	# Any route that doesn't have a file extension (e.g. /devices)
	location / {
		try_files $uri $uri/ /index.html;
	}

	listen 443 ssl; # managed by Certbot
  ssl_certificate /usr/share/nginx/certificates/fullchain.pem;
  ssl_certificate_key /usr/share/nginx/certificates/privkey.pem;
  include /etc/ssl-options/options-ssl-nginx.conf;
  ssl_dhparam /etc/ssl-options/ssl-dhparams.pem;
}

server {
	server_name www.kyros.ai kyros.ai;

	access_log  /var/log/nginx/http_access.log;
	error_log   /var/log/nginx/http_error.log info;

  location / {
		return 301 https://$host$request_uri;
	}

	if ($host = kyros.ai) {
		return 301 https://www.kyros.ai$request_uri;
	} # managed by Certbot

	listen 80;
	listen [::]:80;
}
